
@using TotalPortal.Configuration
@using TotalModel.Models;

@(Html.Kendo().Grid<PendingDeliveryAdviceCustomer>()
    .Name("getCustomersGrid")

    .Columns(columns =>
    {
        columns.Bound(c => c.CustomerName).Title("Nhà cung cấp").Width(120);
        columns.Bound(c => c.CustomerAttentionName).Title("Người liên hệ").Width(100);
        columns.Bound(c => c.CustomerTelephone).Title("Điện thoại").Width(80);
        columns.Bound(c => c.CustomerAddressNo).Title("Địa chỉ").Width(160);
        columns.Bound(c => c.CustomerEntireTerritoryEntireName).Title("Tỉnh thành").Width(160);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
            <div class="toolbar" style="float: right;">
                <label>Nhập tên khách hàng:</label>
                <input id="customerNameSearchBox" class="k-textbox" style="text-align: center; margin-right: 13px;" onkeyup="customerNameSearchBox_KeyUp()" />
            </div>
        </text>);
    })
    .Scrollable(s => s.Height(SettingsManager.PopupContentHeight))
    .DataSource(ds => ds.Ajax()
        .Read(read => read.Action("GetCustomers", "GoodsIssueAPIs", new { area = "Inventories" }).Data("onAdditionalGetCustomers"))
        .ServerOperation(true)
    )
    .Selectable()
)

<script type="text/javascript">
    function onAdditionalGetCustomers(e) {
        return {
            locationID: window.parent.requireConfig.pageOptions.LocationID,
            goodsIssueID: $("#GoodsIssueID").val(),
            customerName: $("#customerNameSearchBox").val()
        };
    }

    function customerNameSearchBox_KeyUp() {
        if ($("#customerNameSearchBox").val().length === 0 || $("#customerNameSearchBox").val().length >= "@SettingsManager.AutoCompleteMinLenght") {
            $("#getCustomersGrid").data("kendoGrid").dataSource.read();
        }
    }


    $("#getCustomersGrid").dblclick(function (e) {
        okButton_Click();
    })
</script>
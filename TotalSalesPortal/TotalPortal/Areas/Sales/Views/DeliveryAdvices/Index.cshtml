@using TotalPortal.Configuration

@model TotalPortal.Areas.Sales.ViewModels.DeliveryAdviceViewModel

<div id="popupWindow" style="position: absolute"></div>


<div>
    @(Html.Kendo().Grid<TotalModel.Models.DeliveryAdviceIndex>()
            .Name("kendoGridIndex")
            .Columns(columns =>
            {
                columns.Bound(p => p.DeliveryAdviceID).DisplayNameTitle().Hidden();
                columns.Bound(p => p.LocationCode).Title("CN").Width(3);
                columns.Bound(p => p.EntryDate).Title("Ngày").Format("{0:dd/MM/yyyy}").Width(40);
                columns.Bound(p => p.CustomerDescription).Title("Khách hàng").Width(470);
                columns.Bound(p => p.TotalGrossAmount).Title("Thành tiền").Format("{0:n0}").HtmlAttributes(new { @class = "grid-number-column", @style = "color: # if (Approved) { #black# } else { #blue# } #" }).Filterable(false).Width(115);//.ClientFooterTemplate("TC: #= kendo.format('{0:n0}', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" })

                columns.Template(model => null).Width(120)
                    .ClientTemplate("<a class='k-button' style='padding-left:5px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Sales/DeliveryAdvices", action = "Edit" }) + "/#= DeliveryAdviceID #'><span class='k-icon k-edit'></span></a> <a class='k-button' style='padding-left:0px; padding-right:0px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "Sales/DeliveryAdvices", action = "Delete" }) + "/#= DeliveryAdviceID #'><span class='k-icon k-delete'></span></a>");
            })
            .ToolBar(toolbar => toolbar.Template("<a class='k-button k-button-icontext k-grid-add' href='javascript:void(0)' onClick='createWizard()'>Lập đề nghị giao hàng</a>"))
            .Pageable()
            .Groupable()
            .Filterable()
            .Selectable()
            .Sortable()
            .Events(e =>
            {
                e.DataBound("hightLightSelectedRow");
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("GetDeliveryAdviceIndexes", "DeliveryAdviceAPIs", new { area = "Sales" }))
                .Sort(sort =>
                    {
                        sort.Add(p => p.EntryDate).Descending();
                        sort.Add(p => p.DeliveryAdviceID).Descending();
                    })
                .PageSize(20)
                .Model(model =>
                {
                    model.Id(x => x.DeliveryAdviceID);
                    model.Field(m => m.DeliveryAdviceID).DefaultValue(0);
                })
                .ServerOperation(true)
                .Aggregates(a => a.Add(x => x.TotalGrossAmount).Sum())
                )
            .HtmlAttributes(new { @class = "grid-class" }))
</div>



<script type="text/javascript">
    function hightLightSelectedRow(e) {
        require(["kindexGrid"], function (kindexGrid) {
            var kindexGridInstance = new kindexGrid("kendoGridIndex");
            kindexGridInstance.setSelectedRow("DeliveryAdviceID", '@ViewBag.SelectedEntityID');
        });
    }

    function createWizard() {
        require(["kpopupWindow"], function (kpopupWindow) {
            var createWizardWindow = new kpopupWindow();
            createWizardWindow.openWindow($("#popupWindow"), "@Url.Action("CreateWizard", "DeliveryAdvices")", "Lập đề nghị giao hàng", "@SettingsManager.PopupWidth", "@SettingsManager.PopupHeightWithTab");
        });
    }
</script>




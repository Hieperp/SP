@using TotalPortal.Configuration

@model TotalDTO.Commons.ICustomerBaseDTO

@Html.HiddenFor(model => model.CustomerID)
@Html.Hidden("TempCodeAndName", (@Model != null ? @Model.CodeAndName : ""))


<div class="right-first-panel">
    <div class="form-group">
        <div class="right-panel-label right-panel-label-icon-only" style="padding-top: 2px;"> <img src="~/Content/Images/Mains/Customer Blue 24.png" title="Khách hàng" />  </div>
        <div class="div-input">

            @(Html.Kendo().AutoCompleteFor(model => model.CodeAndName)
                .DataTextField("CodeAndName")
                .Filter("contains")
                .MinLength(SettingsManager.AutoCompleteMinLenght)
                .Placeholder("Chọn khách hàng, hoặc shift+ để thêm mới...")
                .HeaderTemplate("<div class=\"dropdown-header custom-header\">" +
                        "<span class=\"k-widget k-header\">Tên</span>" +
                        "<span class=\"k-widget k-header\">Ngày sinh</span>" +
                        "<span class=\"k-widget k-header\">Điện thoại</span>" +
                        "<span class=\"k-widget k-header\">Địa chỉ</span>" +
                        "</div>")
                .Template("<div class=\"dropdown-body custom-body\">" +
                        "<span class=\"k-state-default\"><p>#: data.CodeAndName #</p></span>" +
                        "<span class=\"k-state-default\"><p>#: kendo.toString(new Date(parseInt(data.Birthday.replace(/[A-Za-z$--/]/g, ''))), '" + SettingsManager.DateFormat + "') #</p></span>" +
                        "<span class=\"k-state-default\"><p>#: data.Telephone #</p></span>" +
                        "<span class=\"k-state-default\"><p>#: data.AddressNo + data.EntireTerritoryEntireName #</p></span>" +
                        "</div>")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("SearchCustomers", "CustomerAPIs", new { area = "Commons" }).Data(@<text> function(e) {return {searchText: e.filter.filters[0].value};} </text>);//Send parameter to controller search action
                    })
                    .ServerFiltering(true);
                })
                .Events(e =>
                {
                    e.Select("customer_Select");
                    e.DataBound("customer_DataBound");
                })
                .HtmlAttributes(new { @class = "customerBase_AutoComplete" })
            )

        </div>
        <div class="div-validation-message">
            @Html.ValidationMessageFor(model => model.CodeAndName, "", new { @class = "text-danger" })
        </div>
    </div>
</div>


@Html.Partial("~/Views/Helpers/Commons/_CustomerDescription.cshtml")


<link href="@Url.Content("~/Content/CustomCss/GeneralCustomersAutoComplete.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/CustomCss/CustomersAutoComplete.css")" rel="stylesheet" type="text/css" />

<script type="text/javascript">

    getModelID = function (modelID) {
        return modelID.substring(0, modelID.length - 11); //At first: Pass: modelID = this.element.attr('id') = 'Customer_CodeAndName', Then: Return: ('Customer_CodeAndName').substring(0, modelID.length - 11) = 'Customer_'
    }

    customer_DataBound = function (e) {
        var modelID = getModelID(this.element.attr('id'));
        $(".k-animation-container:has(#" + modelID + "CodeAndName-list)").css("width", "743");
        $("#" + modelID + "CodeAndName-list").css("width", "743");
        $("#" + modelID + "CodeAndName-list").css("height", $("#" + modelID + "CodeAndName-list").height() + 1);
    }

    customer_Select = function (e) {
        var modelID = getModelID(this.element.attr('id'));

        var dataItem = e.sender.dataItem(e.item.index());

        //Set input data to POST
        $("#" + modelID + "CustomerID").val(dataItem.CustomerID);
        $("#" + modelID + "Code").val(dataItem.Code);
        $("#" + modelID + "Name").val(dataItem.Name);
        $("#" + modelID + "OfficialName").val(dataItem.OfficialName);
        $("#" + modelID + "Birthday").val(kendo.toString(new Date(parseInt(dataItem.Birthday.replace(/[A-Za-z$--/]/g, ''))), "@SettingsManager.DateFormat"));
        $("#" + modelID + "VATCode").val(dataItem.VATCode);
        $("#" + modelID + "Telephone").val(dataItem.Telephone);
        $("#" + modelID + "AddressNo").val(dataItem.AddressNo);
        $("#" + modelID + "TerritoryID").val(dataItem.TerritoryID);
        $("#" + modelID + "EntireTerritoryEntireName").val(dataItem.EntireTerritoryEntireName);
        $("#" + modelID + "PriceCategoryID").val(dataItem.PriceCategoryID);
        $("#" + modelID + "PriceCategoryCode").val(dataItem.PriceCategoryCode);

        //Set display label
        $("#" + modelID + "label_Telephone").text(dataItem.Telephone);
        $("#" + modelID + "label_VATCode").text(dataItem.VATCode);
        $("#" + modelID + "label_AddressNo").text(dataItem.AddressNo);
        $("#" + modelID + "label_EntireTerritoryEntireName").text(dataItem.EntireTerritoryEntireName);

        //Remember last AutoComplete value
        $("#" + modelID + "TempCodeAndName").val(dataItem.CodeAndName);

        //Trigger change event. This event is not used in this editor template. It will be catch out side of this editor template (Currently, this event is used to load promotion list for selected customer)
        $("#" + modelID + "CustomerID").trigger("change");
    }

    $(".customerBase_AutoComplete").focusout(function (e) {
        var modelID = getModelID(this.id);
        $(this).val($("#" + modelID + "TempCodeAndName").val());
    });

</script>

<style>
    .customerBase_AutoComplete {
        width: 72%;
    }
</style>